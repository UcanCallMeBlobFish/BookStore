// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using bookstore.Context;

#nullable disable

namespace bookstore.Migrations
{
    [DbContext(typeof(Data))]
    partial class DataModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("bookstore.Models.Book", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("Name");

                    b.ToTable("Book");

                    b.HasData(
                        new
                        {
                            Name = "Book 1",
                            Author = "Author 1",
                            Capacity = 10,
                            Category = "Category 1",
                            Price = 20
                        },
                        new
                        {
                            Name = "Book 2",
                            Author = "Author 2",
                            Capacity = 20,
                            Category = "Category 2",
                            Price = 30
                        },
                        new
                        {
                            Name = "Book 3",
                            Author = "Author 3",
                            Capacity = 30,
                            Category = "Category 3",
                            Price = 40
                        },
                        new
                        {
                            Name = "Book 4",
                            Author = "Author 4",
                            Capacity = 40,
                            Category = "Category 4",
                            Price = 50
                        },
                        new
                        {
                            Name = "Book 5",
                            Author = "Author 5",
                            Capacity = 50,
                            Category = "Category 5",
                            Price = 60
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
